{"version":3,"sources":["components/ListOption.js","components/ConfirmFinalMessage.js","components/RoomDetailCheckin.js","components/RoomDetailCheckout.js","components/ListRoomRows.js","components/sha256.js","containers/IndexPage.js","containers/LoginPage.js","serviceWorker.js","index.js"],"names":["formatNumber","num","toString","replace","ListOption","React","Component","constructor","props","console","log","super","this","state","items","listoptionIds","slice","optionListSelected","length","option","description","optionid","price","quantity","total","totalOptions","forEach","method","bind","componentDidMount","listOptionSlt","listOptionSltIds","map","item","push","listOptionIDsTmp","concat","listOptionIDsMerge","filter","pos","indexOf","setState","listoptionIdstmp","listoption","handleAddRow","flagNew","i","startsWith","parseInt","onChangeOption","handleRemoveRow","pop","handleChangeQuantity","event","data","isNaN","value","toast","info","handleChangeDropdown","tmp","optionId","handleOptionOtherChange","val","render","total_option","count","createElement","Segment","placeholder","textAlign","Grid","columns","relaxed","stackable","Column","Form","Label","Dropdown","options","selection","onChange","Input","disabled","type","max","min","Divider","horizontal","size","Statistic","Value","Button","content","icon","color","onClick","Group","TableBT","striped","bordered","hover","style","width","label","floated","key","Math","random","float","as","tag","hidden","Moment","locale","momentLocalizer","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","RoomDetailCheckin","show","open","handleConfirm","handleCancel","CheckinTimeSelected","roominfo","fromTime","Date","CheckoutTimeSelected","toTime","roomCurrentClass","moreOptionId","JSON","parse","roomDetailOpen","isSubmiting","CheckinDate","substr","getFullYear","getMonth","getDate","CheckinTime","getHours","getMinutes","CheckoutDate","CheckoutTime","checkoutInfo","checkinTime","checkoutTime","roomClass","totalOptionPrice","totalRoomPrice","totalPrice","noteText","checkoutRoomSubmit","roomId","roomid","id","stringify","CheckoutSubmitRoom","error","UpdateCheckInRoom","getStatusDes","status","arguments","undefined","stt","statusList","text","disableCheckout","onChangePickedTime","onChangePickedCheckoutTime","handleChangeTypeIDSelect","handleChangeOption","handleShowModal","handleHideModal","handleChangeInputDate","handleChangeInputCheckoutDate","handleChangeInputCheckoutTime","handleChangeInputTime","getCheckoutInfo","CheckoutRoom","action","formatted_date","formattedcheckout_date","current_datetime","current_Checkoutdatetime","getSeconds","encoded","result","fetch","body","headers","then","async","response","msgerr","json","roomTypeOther","imgsrc","Modal","closeIcon","onClose","trigger","className","boxShadow","src","alt","Header","marginLeft","fontWeight","Content","image","scrolling","height","Image","wrapped","TextArea","minHeight","Description","roomDescription","name","DateTimePicker","padded","display","primary","loading","basic","labelPosition","iconPosition","Select","fluid","ribbon","Actions","checkinRoomSubmit","Confirm","Dimmer","active","inverted","Loader","header","onCancel","onConfirm","ListRoomRows","refreshPage","renderDetail","room","renderRow","roomsInfo","Array","prototype","call","backgroundColor","encrypt","string","RotateLeft","lValue","iShiftBits","AddUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","FF","a","b","c","d","x","s","ac","y","z","F","GG","G","HH","H","II","I","WordToHex","lCount","WordToHexValue","WordToHexValue_temp","k","AA","BB","CC","DD","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords","lWordArray","lBytePosition","lByteCount","charCodeAt","ConvertToWordArray","utftext","n","String","fromCharCode","Utf8Encode","toLowerCase","defaultProps","IndexPage","isLoadedRooms","isLoadedParam","rooms","roomIds","statusIds","roomTypeOtherIds","roomidselected","statusSelected","res","strs","ids","tmp2","newstr","getListStatus","getlistoption","getroomTypeOther","isSuccess","success","position","POSITION","TOP_RIGHT","handleClearSearching","getListRoomDetails","handleChangeRoomIDSelect","handleChangeStatusIDSelect","renderSearchForm","listRoomIds","listStatusIds","styleDisable","attached","widths","renderListRooms","message","getIPAddress","mode","ipadd","userInfo","LoginPage","errUserMsg","errPassMsg","errpinCode","token","email","ipAddress","userName","passWord","pinCode","isVerified","isChecking","handleChangePinCode","handleChangeUser","handleChangePass","verifyEmail","isValid","submitLogin","passWordHash","username","pincode","sessionStorage","setItem","setTokenValid","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ThaiBinhHotel","isTokenValid","getItem","getIPAndCheckToken","host","checkTokenValid","ToastContainer","fontSize","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6ca52d8c.chunk.js","sourcesContent":["import React from 'react'\nimport {Button, Form, Input, Dropdown, Divider, Grid, Label, Statistic} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport TableBT from 'react-bootstrap/Table';\nimport {Segment} from 'semantic-ui-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport class ListOption extends React.Component {\n    constructor(props) {\n        console.log('constructor');\n        super(props);\n        this.state = {\n            items: this.props.listoptionIds.slice(0, this.props.optionListSelected.length),\n            option: {\n                description: '',\n                optionid: null,\n                price: 0,\n                quantity: 0,\n                total: 0\n            },\n            listoptionIds: [],\n            optionListSelected: [],\n            totalOptions: 0,\n        };\n        [\n            'handleChangeDropdown',\n            'handleChangeQuantity',\n            'handleAddRow',\n            'handleRemoveRow',\n            'handleOptionOtherChange'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount');\n        let listOptionSlt = this.props.optionListSelected;\n        let listOptionSltIds = [];\n        listOptionSlt && listOptionSlt.map(item => {\n            listOptionSltIds.push(item[\"optionid\"])\n        })\n\n        var listOptionIDsTmp = listOptionSltIds.concat(this.props.listoptionIds);\n        var listOptionIDsMerge = listOptionIDsTmp.filter((item, pos) => listOptionIDsTmp.indexOf(item) === pos);\n\n        this.setState({\n            items: listOptionIDsMerge.slice(0, this.props.optionListSelected.length)\n        });\n\n\n        //get List option for select\n        var listoptionIdstmp = {};\n        var listoptionIds = [];\n\n        this.props.listoption.map(item => {\n            listoptionIdstmp = {}\n            listoptionIdstmp['key'] = item['optionId'];\n            listoptionIdstmp['text'] = item['description'];\n            listoptionIdstmp['value'] = item['optionId'];\n            listoptionIds.push(listoptionIdstmp);\n        });\n        this.setState({\n            listoptionIds: listoptionIds,\n        });\n\n        //Set value for State: optionListSelected\n        this.setState({\n            optionListSelected: this.props.optionListSelected\n        });\n\n    }\n\n\n    handleAddRow() {\n        console.log('handleAddRow');\n        const option = {...this.state.option};\n        let optionListSelected = this.state.optionListSelected;\n        let flagNew = true;\n        for (let i = 0; i < optionListSelected.length; i++) {\n            if (optionListSelected[i].optionid == option.optionid) {\n                if(optionListSelected[i].description.startsWith(\"Other\")){\n                    optionListSelected[i].quantity = 1;\n                    optionListSelected[i].total = option.total;\n                } else {\n                    optionListSelected[i].quantity = parseInt(option.quantity) + parseInt(optionListSelected[i].quantity);\n                    optionListSelected[i].total = parseInt(optionListSelected[i].quantity) * parseInt(optionListSelected[i].price);\n                }\n                flagNew = false;\n                break;\n            }\n        }\n        console.log(optionListSelected);\n        if (flagNew) {\n            optionListSelected.push(option);\n        }\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleRemoveRow() {\n        console.log('handleRemoveRow');\n        const optionListSelected = this.state.optionListSelected;\n        optionListSelected.pop();\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleChangeQuantity(event, data) {\n        console.log('handleChangeQuantity');\n        if(!data){\n            return;\n        }\n        if (isNaN(data.value)) {\n            return\n        } else {\n            if (parseInt(data.value) < 0 || parseInt(data.value) > 100) {\n                toast.info('Số lượng phải từ 0 - 100');\n                return;\n            }\n        }\n        let option = {...this.state.option};\n        option['quantity'] = parseInt(data.value);\n        option['total'] = parseInt(data.value) * parseInt(option['price']);\n\n        this.setState({\n            option: option,\n        });\n    }\n\n    handleChangeDropdown(event, data) {\n        console.log('handleChangeDropdown');\n        const listoption = this.props.listoption;\n        let tmp = [];\n        for (let i = 0; i < listoption.length; i++) {\n            if (listoption[i].optionId == data.value) {\n                tmp = [];\n                tmp = listoption[i];\n                tmp['optionid'] = listoption[i].optionId;\n                tmp['quantity'] = 1;\n                tmp['total'] = tmp['price'];\n                break;\n            }\n        }\n        this.setState({\n            option: tmp,\n        });\n    }\n\n    handleOptionOtherChange(val, data){\n        let tmp = {...this.state.option};\n        tmp['total'] = (parseInt(data.value) ? parseInt(data.value) : 0);\n        console.log(tmp);\n        this.setState({\n           option: tmp\n        });\n    }\n\n    render() {\n        console.log('render');\n        const items = this.state.optionListSelected;\n\n        // console.log(items);\n        // console.log(this.props.listoptionIds);\n        // console.log(this.props.listoption);\n        // console.log(this.props.optionListSelected);\n        // console.log(this.state.listoptionIds)\n        // console.log(this.state.optionListSelected);\n        // debugger;\n        var total_option = 0;\n        var count = 0;\n        return (\n            <div>\n                <div>\n                    <Segment placeholder textAlign='center'>\n                        <Grid columns={1} relaxed='very' stackable>\n                            <Grid.Column>\n                                <Form>\n                                    <Label>Loại SP:</Label>\n                                    <Dropdown\n                                        options={this.state.listoptionIds}\n                                        value={this.state.option.optionid}\n                                        placeholder='Choose an option'\n                                        selection\n                                        onChange={this.handleChangeDropdown}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label>Số lượng:</Label>\n                                    <Input\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.description.startsWith(\"Other\")}\n                                        placeholder='...'\n                                        type='number'\n                                        max='100'\n                                        min='0'\n                                        value={this.state.option.quantity}\n                                        onChange={this.handleChangeQuantity}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label> Số tiền/1\n                                        sp: <b>{formatNumber(this.state.option.price)} VND</b>\n                                    </Label>\n                                    <br/>\n                                    <br/>\n                                    {/*<Label style={{display: this.state.errMessQuantity}} basic color='red'*/}\n                                    {/*       pointing='left'>*/}\n                                    {/*    Số lượng từ phải từ 0 - 100*/}\n                                    {/*</Label>*/}\n                                </Form>\n\n                                <Divider horizontal>Total</Divider>\n\n                                {this.state.option.description.startsWith(\"Other\")\n                                    ? <div>\n                                        <Input size=\"small\" type=\"number\" value={this.state.option.total} onChange={this.handleOptionOtherChange}/>\n                                        <br/><br/>\n                                     </div>\n                                    : <Statistic horizontal size='tiny'>\n                                        <Statistic.Value>{formatNumber(this.state.option.total)}</Statistic.Value>\n                                        <Statistic.Label>vnd</Statistic.Label>\n                                     </Statistic>\n                                }\n\n                                <Button content='Add' icon='plus square' size='big' color='grey'\n                                        onClick={this.handleAddRow}\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.quantity == 0 || this.state.option.total == 0}/>\n                            </Grid.Column>\n                        </Grid>\n                    </Segment>\n                </div>\n                <Button.Group>\n                </Button.Group>\n                {this.state.optionListSelected ? <TableBT size=\"sm\" striped bordered hover style={{width: '100%'}}>\n                    <thead>\n                    <tr>\n                        <th></th>\n                        <th>\n                            <Button\n                                label='Remove'\n                                disabled={this.state.optionListSelected.length === 0}\n                                icon='minus square'\n                                onClick={this.handleRemoveRow}\n                                floated='right'\n                            />\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.optionListSelected.map((item) => (\n                        <tr key={Math.random()}>\n                            {(item) && (\n                                [<td key={Math.random()}>\n                                    <b>{item.quantity} - {item.description}</b>\n                                </td>,\n                                    <td key={Math.random()}>\n                                        <b style={{float: 'right'}}><Label as='a' color='olive' tag\n                                                                           size='large'>{formatNumber(item.total)} VND</Label></b>\n                                        <p hidden>{count = count + 1} {total_option = total_option + item.total}</p>\n                                    </td>]\n                            )\n                            }\n                        </tr>\n                    ))}\n                    </tbody>\n                    <tfoot>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <b style={{float: 'right'}}><Label as='a' color='yellow' tag\n                                                               size='large'>{formatNumber(total_option)} VND</Label></b>\n                        </td>\n                    </tr>\n                    </tfoot>\n                </TableBT> : <div></div>\n                }\n            </div>\n        )\n    }\n}\n\nListOption.propTypes = {\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    optionListSelected: PropTypes.array,\n    onChangeOption: PropTypes.func,\n}","import React, {Component} from 'react'\nimport {Button, Header, Icon, Modal, Loader, Dimmer} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport {toast} from \"react-toastify\";\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class ConfirmFinalMessage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalOpen: true,\n            checkoutInfo: this.props.checkoutInfo\n        };\n\n        this.checkoutRoomSubmit = this.checkoutRoomSubmit.bind(this);\n    }\n\n    // componentDidMount() {\n    //     this.getCheckoutInfo();\n    // }\n    //\n    // componentWillReceiveProps(nextProps) {\n    //     console.log(nextProps);\n    // }\n\n    handleOpen = () => {\n        this.setState({modalOpen: true});\n        // this.props.getRoomCheckoutInfo();\n    }\n\n    handleClose = () => this.setState({modalOpen: false})\n\n    async checkoutRoomSubmit() {\n\n    }\n\n    render() {\n        // this.getCheckoutInfo();\n        console.log(this.props.checkoutInfo);\n\n\n        return (\n            <Modal\n                trigger={<Button style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}} primary\n                                 onClick={this.handleOpen}>CheckOut</Button>}\n                open={this.state.modalOpen}\n                onClose={this.handleClose}\n                basic\n                size='small'\n                centered\n            >\n                <Header icon='browser' content='Check final list.'/>\n\n                    <Modal.Content>\n                        <h3>\n                            This website uses cookies to ensure the best user experience.\n\n                        </h3>\n                        <Modal.Actions>\n                            <Button color='green' inverted>\n                                <Icon name='checkmark'/> Confirm & CheckOut\n                            </Button>\n                            <Button color='green' onClick={this.handleClose}  inverted>\n                                <Icon name='checkmark'/> Close\n                            </Button>\n                        </Modal.Actions>\n                    </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nConfirmFinalMessage.propTypes = {\n    checkoutInfo: PropTypes.object,\n    CheckoutRoom: PropTypes.func,\n    getRoomCheckoutInfo: PropTypes.func\n}","import React from 'react'\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Input,\n    Label,\n    Modal,\n    Segment,\n    Statistic,\n    TextArea,\n    Confirm, Loader, Dimmer\n} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport {ListOption} from '../components/ListOption';\nimport {ConfirmFinalMessage} from '../components/ConfirmFinalMessage';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport {ListRoomRows} from \"./ListRoomRows\";\n\nMoment.locale('vn')\nmomentLocalizer()\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class RoomDetailCheckin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            CheckinTimeSelected: (this.props.roominfo.fromTime ? new Date(this.props.roominfo.fromTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            CheckoutTimeSelected: (this.props.roominfo.toTime ? new Date(this.props.roominfo.toTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            roomCurrentClass: (this.props.roominfo.roomCurrentClass ? this.props.roominfo.roomCurrentClass : ''),\n            optionListSelected: (this.props.roominfo.moreOptionId ? JSON.parse(this.props.roominfo.moreOptionId) : ''),\n            roomDetailOpen: false,\n            isSubmiting: false,\n            CheckinDate: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckinTime: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            CheckoutDate: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckoutTime: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            checkoutInfo: {\n                checkinTime: '',\n                checkoutTime: '',\n                roomClass: '',\n                totalOptionPrice: 0,\n                totalRoomPrice: 0,\n                totalPrice: 0,\n                CheckinTimeSelected: '',\n                CheckoutTimeSelected: '',\n            },\n            noteText: this.props.roominfo.noteText,\n        };\n\n        [\n            'checkinRoomSubmit',\n            'getStatusDes',\n            'onChangePickedTime',\n            'handleChangeTypeIDSelect',\n            'handleChangeOption',\n            'handleShowModal',\n            'handleHideModal',\n            'handleChangeInputDate',\n            'handleChangeInputTime',\n            'handleChangeInputCheckoutDate',\n            'handleChangeInputCheckoutTime',\n            'onChangePickedCheckoutTime',\n            'CheckoutRoom',\n            'getCheckoutInfo',\n            'checkoutRoomSubmit',\n            'disableCheckout'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    show = () => this.setState({open: true})\n    handleConfirm = () => this.setState({open: false})\n    handleCancel = () => this.setState({open: false})\n\n    checkoutRoomSubmit() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'checkout';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        let totalRoomPrice = this.state.checkoutInfo.totalRoomPrice;\n        let totalPrice = this.state.checkoutInfo.totalPrice;\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.props.CheckoutSubmitRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText);\n    }\n\n    async checkinRoomSubmit() {\n        this.setState({\n            isSubmiting: true\n        });\n        let action = 'checkin';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n\n        let checkinTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            console.log(checkinTime)\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        await this.props.UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText);\n        // await sleep(5000);\n        this.setState({\n            roomDetailOpen: false,\n            isSubmiting: false\n        });\n    }\n\n    getStatusDes(status = '') {\n        let stt = this.props.statusList;\n        for (var i = 0; i < stt.length; i++) {\n            if (stt[i].key == status) {\n                return stt[i].text;\n            }\n        }\n    }\n\n    disableCheckout() {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        checkoutInfo.totalPrice = 0;\n        this.setState({\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    onChangePickedTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTimeSelected: val\n        });\n    }\n\n    onChangePickedCheckoutTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTimeSelected: val\n        });\n    }\n\n    handleChangeTypeIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.disableCheckout();\n        this.setState({\n            roomCurrentClass: val['value']\n        });\n    }\n\n    handleChangeOption(data = []) {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        let total = 0;\n        for (var i = 0; i < data.length; i++) {\n            total = total + data[i].total;\n        }\n        checkoutInfo['totalPrice'] = checkoutInfo[\"totalRoomPrice\"] + total;\n        this.setState({\n            optionListSelected: data,\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    handleShowModal() {\n        this.setState({\n            roomDetailOpen: true\n        });\n    }\n\n    handleHideModal() {\n        this.setState({\n            roomDetailOpen: false\n        });\n    }\n\n    handleChangeInputDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTime: data.value\n        });\n    }\n\n    handleChangeInputTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTime: data.value\n        });\n    }\n\n    getCheckoutInfo() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'getTotalConfirm';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (checkinTime > checkoutTime) {\n            toast.error('Giờ ra phải sau giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime);\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime) {\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        // console.log(formatted_date);\n        // console.log(formattedcheckout_date);\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&checkoutTime=\" + formattedcheckout_date;\n        let result = '';\n        if (action == \"getTotalConfirm\") {\n            await fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=checkoutinfo', {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n                });\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        console.log(result);\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.setState({\n                    checkoutInfo: {\n                        checkinTime: checkinTime,\n                        checkoutTime: checkoutTime,\n                        roomClass: roomClass,\n                        totalOptionPrice: totalOptionPrice,\n                        totalRoomPrice: result['roomPrice'],\n                        totalPrice: result['totalPrice'],\n                        CheckinTimeSelected: formatted_date,\n                        CheckoutTimeSelected: formattedcheckout_date,\n                    },\n                    isSubmiting: false\n                });\n            })\n        }\n    }\n\n    render() {\n        const {roominfo, roomTypeOther} = this.props;\n        let imgsrc = roominfo.roomid ? 'images/room' + roominfo.roomid + '.png' : 'images/room101.png';\n\n        return (\n            <Modal style={{width: '100%'}} open={this.state.roomDetailOpen} closeIcon\n                   onClose={() => {\n                       this.setState({roomDetailOpen: false})\n                   }}\n                   trigger={<a className=\"image fit\"><img style={{boxShadow: '10px 10px 5px #ccc'}}\n                                                          onClick={this.handleShowModal}\n                                                          src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>}>\n                <Modal.Header>\n                    <Statistic style={{marginLeft: '30%'}} horizontal size='tiny'>\n                        <Statistic.Value style={{\n                            color: \"#00bfff\",\n                            fontWeight: 'bold'\n                        }}>{formatNumber(this.state.checkoutInfo.totalPrice)}</Statistic.Value>\n                        <Statistic.Label>vnd</Statistic.Label>\n                    </Statistic>.\n                </Modal.Header>\n                <Modal.Content image scrolling style={{height: '450%'}}>\n                    <Image size='large' src={imgsrc} wrapped>\n                        <Form>\n                            <TextArea placeholder='Ghi chú...' style={{minHeight: 100}}\n                                      value={this.state.noteText} onChange={(event, data) => {\n                                this.setState({noteText: data.value})\n                            }}/>\n                        </Form>\n                    </Image>\n                    <Modal.Description style={{width: '100%'}}>\n                        <Header>{roominfo.roomDescription}</Header>\n                        <b>\n                            Status: {this.getStatusDes(roominfo.status)}\n                        </b>\n                        <hr/>\n                        <label>\n                            <b>Checkin:</b>\n                        </label>\n                        <div>\n                            {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckinTimeSelected}\n                                                               onChange={this.onChangePickedTime}/> :\n                                <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                    onChange={this.handleChangeInputDate}\n                                                                    value={this.state.CheckinDate} type=\"date\"\n                                                                    name=\"CheckinDate\"/>\n                                    <Input size='huge' style={{width: '50%'}} onChange={this.handleChangeInputTime}\n                                           value={this.state.CheckinTime} type=\"time\" name=\"CheckinTime\"/>\n                                </div>\n                            }\n                        </div>\n                        <Segment padded style={{display: this.props.roominfo.status == 0 ? '' : 'none'}}>\n                            <div>\n                                <label>\n                                    <b style={{color: \"#00bfff\"}}>CheckOut:</b>\n                                </label>\n                                {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckoutTimeSelected}\n                                                                   onChange={this.onChangePickedCheckoutTime}/> :\n                                    <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                        onChange={this.handleChangeInputCheckoutDate}\n                                                                        value={this.state.CheckoutDate} type=\"date\"\n                                                                        name=\"CheckoutDate\"/>\n                                        <Input size='huge' style={{width: '50%'}}\n                                               onChange={this.handleChangeInputCheckoutTime}\n                                               value={this.state.CheckoutTime} type=\"time\" name=\"CheckoutTime\"/>\n                                    </div>\n                                }\n                                <br/>\n                                <Button primary style={{float: 'left', width: '45%'}} size=\"large\"\n                                        onClick={this.getCheckoutInfo} disabled={this.state.isSubmiting}>\n                                    Check Price:\n                                </Button>\n                                {this.state.isSubmiting ?\n                                    <Input size='large' loading icon='user' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right'\n                                           iconPosition='left' style={{width: \"40%\"}} placeholder='Search...'/>\n                                    :\n                                    <Input size=\"large\" icon='money bill alternate outline' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right'\n                                           iconPosition='left' style={{width: \"40%\"}} placeholder='Search...'/>\n                                }\n                            </div>\n                        </Segment>\n                        <hr/>\n                        <div>\n                            <label>\n                                <b>Room Type:</b>\n                            </label>\n                            <Form.Select\n                                fluid\n                                icon=''\n                                size=\"huge\"\n                                // label='Room Type:'\n                                value={this.state.roomCurrentClass}\n                                options={roomTypeOther}\n                                onChange={this.handleChangeTypeIDSelect}\n                                placeholder='Type'\n                            />\n                        </div>\n                        <hr/>\n                        <Label as='a' color='teal' ribbon>\n                            Thêm Sản Phẩm:\n                        </Label>\n                        <ListOption listoptionIds={this.props.listoptionIds}\n                                    listoption={this.props.listoption}\n                                    onChangeOption={this.handleChangeOption}\n                                    optionListSelected={this.state.optionListSelected ? this.state.optionListSelected : []}/>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary onClick={this.show}\n                            disabled={this.state.isSubmiting || this.state.checkoutInfo.totalPrice == 0}\n                            style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}}>\n                        CheckOut\n                    </Button>\n                    <Button primary onClick={this.checkinRoomSubmit} disabled={this.state.isSubmiting}>\n                        {this.props.roominfo.status == 1 ? \"CheckIn\" : \"Update\"}\n                    </Button>\n                    <Button primary onClick={this.handleHideModal} disabled={this.state.isSubmiting}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n                <Confirm\n                    open={this.state.open}\n                    content={this.state.isSubmiting ?\n                        <Dimmer active inverted>\n                            <Loader size='large'>Hệ thống đang xử lý.</Loader>\n                        </Dimmer>\n                        :\n                        <div style={{textAlign: 'center'}}>\n                            <Segment>\n                                <h3>\n                                    <table>\n                                        <tbody>\n                                        {!isMobile.iOS() ?\n                                            [<tr key='1'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='2'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>]\n                                            :\n                                            [<tr key='3'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='4'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>\n                                            ]}\n                                        <tr>\n                                            <td>Tiền ở:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalRoomPrice)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tiền khác:</td>\n                                            <td>{formatNumber((this.state.checkoutInfo.totalPrice - this.state.checkoutInfo.totalRoomPrice))}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tổng tiền:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalPrice)}</td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </h3>\n                            </Segment>\n                        </div>\n                    }\n                    header='Confirm CheckOut'\n                    onCancel={this.handleCancel}\n                    onConfirm={this.checkoutRoomSubmit}\n                />\n            </Modal>\n        );\n    }\n}\n\n\nRoomDetailCheckin.propTypes = {\n    roominfo: PropTypes.object,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutSubmitRoom: PropTypes.func\n}","import React from 'react'\nimport {Button, Form, Header, Image, Label, Modal, Input} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport {ListOption} from '../components/ListOption';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\n\nMoment.locale('vn');\nmomentLocalizer();\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class RoomDetailCheckout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            CheckinTimeSelected: (this.props.roominfo.fromTime ? new Date(this.props.roominfo.fromTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            roomCurrentClass: (this.props.roominfo.roomCurrentClass ? this.props.roominfo.roomCurrentClass : ''),\n            optionListSelected: (this.props.roominfo.moreOptionId ? JSON.parse(this.props.roominfo.moreOptionId) : ''),\n            roomDetailOpen: false,\n            isSubmiting: false,\n            CheckinDate: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckinTime: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes())))\n        };\n\n        [\n            'checkinRoomSubmit',\n            'getStatusDes',\n            'onChangePickedTime',\n            'handleChangeTypeIDSelect',\n            'handleChangeOption',\n            'handleShowModal',\n            'handleHideModal',\n            'handleChangeInputDate',\n            'handleChangeInputTime'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async checkinRoomSubmit() {\n        // window.location.reload(true);\n        await this.setState({\n            isSubmiting: true\n        });\n        let action = 'checkin';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let checkinTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            console.log(checkinTime)\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        await this.props.UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId);\n        // await sleep(5000);\n        await this.setState({\n            roomDetailOpen: false,\n            isSubmiting: false\n        });\n    }\n\n    getStatusDes(status = '') {\n        let stt = this.props.statusList;\n        for (var i = 0; i < stt.length; i++) {\n            if (stt[i].key == status) {\n                return stt[i].text;\n            }\n        }\n    }\n\n    onChangePickedTime(val) {\n        this.setState({\n            CheckinTimeSelected: val\n        });\n    }\n\n    handleChangeTypeIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomCurrentClass: val['value']\n        });\n    }\n\n    handleChangeOption(data = []) {\n        this.setState({\n            optionListSelected: data\n        });\n    }\n\n    handleShowModal() {\n        this.setState({\n            roomDetailOpen: true\n        });\n    }\n\n    handleHideModal() {\n        this.setState({\n            roomDetailOpen: false\n        });\n    }\n\n    handleChangeInputDate(val, data) {\n        this.setState({\n            CheckinDate: data.value\n        });\n    }\n\n    handleChangeInputTime(val, data) {\n        this.setState({\n            CheckinTime: data.value\n        });\n    }\n\n    render() {\n        const {roominfo, roomTypeOther} = this.props;\n        let imgsrc = roominfo.roomid ? 'images/room' + roominfo.roomid + '.png' : 'images/room101.png';\n        let CheckinDate = this.state.CheckinDate;\n        let CheckinTime = this.state.CheckinTime;\n        // console.log(this.state.CheckinTimeSelected);\n        // console.log(this.props.roominfo);\n\n        // if (isMobile.iOS() && roominfo.fromtime) {}\n\n        return (\n            <Modal style={{width: '100%'}} open={this.state.roomDetailOpen} closeIcon\n                   onClose={() => {\n                       this.setState({roomDetailOpen: false})\n                   }}\n                   trigger={<a className=\"image fit\"><img style={{boxShadow: '10px 10px 5px #ccc'}}\n                                                          onClick={this.handleShowModal}\n                                                          src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>}>\n                <Modal.Header>Room Detail</Modal.Header>\n                <Modal.Content image scrolling style={{height: '450%'}}>\n                    <Image size='medium' src={imgsrc} wrapped/>\n                    <Modal.Description style={{width: '100%'}}>\n                        <Header>{roominfo.roomDescription}</Header>\n                        <b>\n                            Status: {this.getStatusDes(roominfo.status)}\n                        </b>\n                        <hr/>\n                        <label>\n                            <b>Checkin:</b>\n                        </label>\n                        <div>\n                            {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckinTimeSelected}\n                                                               onChange={this.onChangePickedTime}/> :\n                                <div style={{width: '100%'}}><Input style={{width: '50%'}}\n                                                                    onChange={this.handleChangeInputDate}\n                                                                    value={CheckinDate} type=\"date\"\n                                                                    name=\"CheckinDate\"/>\n                                    <Input style={{width: '50%'}} onChange={this.handleChangeInputTime}\n                                           value={CheckinTime} type=\"time\" name=\"CheckinTime\"/>\n                                </div>\n                            }\n                        </div>\n                        <hr/>\n                        <div>\n                            <label>\n                                <b>Room Type:</b>\n                            </label>\n                            <Form.Select\n                                fluid\n                                icon=''\n                                // label='Room Type:'\n                                value={this.state.roomCurrentClass}\n                                options={roomTypeOther}\n                                onChange={this.handleChangeTypeIDSelect}\n                                placeholder='Type'\n                            />\n                        </div>\n                        <hr/>\n                        <Label as='a' color='teal' ribbon>\n                            Thêm Sản Phẩm:\n                        </Label>\n                        <ListOption listoptionIds={this.props.listoptionIds}\n                                    listoption={this.props.listoption}\n                                    onChangeOption={this.handleChangeOption}\n                                    optionListSelected={this.state.optionListSelected ? this.state.optionListSelected : []}/>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary onClick={this.checkinRoomSubmit} disabled={this.state.isSubmiting}>\n                        CheckIn\n                    </Button>\n                    <Button primary onClick={this.handleHideModal} disabled={this.state.isSubmiting}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\n\nRoomDetailCheckout.propTypes = {\n    roominfo: PropTypes.object,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RoomDetailCheckin } from '../components/RoomDetailCheckin';\nimport { RoomDetailCheckout } from '../components/RoomDetailCheckout';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport class ListRoomRows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          open: false\n        };\n\n        [\n            'renderRow',\n            'refreshPage'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    refreshPage(){\n\n    }\n\n    renderDetail(room = []){\n        if(room.status == 1) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 0) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 2) {\n\n        }\n    }\n\n    renderRow() {\n        const {roomsInfo} = this.props;\n        return Array.prototype.map.call(roomsInfo, (room) => (\n            <div className=\"col-3 col-12-mobile\" key={room.roomid}>\n                <article className=\"item\">\n                    <div className=\"image fitfull\">\n                        {this.renderDetail(room)}\n                    </div>\n                    <header>\n                        {room.status == 1 ? <h2 style={{backgroundColor: '#e1eaea'}}>{room.roomid}</h2> : <h2 style={{backgroundColor: '#ffd633'}}>{room.roomid}</h2>}\n                    </header>\n                </article>\n            </div>\n        ));\n    }\n\n    render() {\n        // console.log(this.props.roomInfo);\n        return (\n            <div className=\"row\">\n                {this.renderRow()}\n            </div>\n\n        );\n    }\n}\n\nListRoomRows.defaultProps = {\n    roomsInfo: []\n}\n\nListRoomRows.propTypes = {\n    roomsInfo: PropTypes.array,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutRoom: PropTypes.func\n}\n\n","export function encrypt(string) {\n\n    function RotateLeft(lValue, iShiftBits) {\n        return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n    }\n\n    function AddUnsigned(lX,lY) {\n        var lX4,lY4,lX8,lY8,lResult;\n        lX8 = (lX & 0x80000000);\n        lY8 = (lY & 0x80000000);\n        lX4 = (lX & 0x40000000);\n        lY4 = (lY & 0x40000000);\n        lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            } else {\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n            }\n        } else {\n            return (lResult ^ lX8 ^ lY8);\n        }\n    }\n\n    function F(x,y,z) { return (x & y) | ((~x) & z); }\n    function G(x,y,z) { return (x & z) | (y & (~z)); }\n    function H(x,y,z) { return (x ^ y ^ z); }\n    function I(x,y,z) { return (y ^ (x | (~z))); }\n\n    function FF(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function GG(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function HH(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function II(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function ConvertToWordArray(string) {\n        var lWordCount;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1=lMessageLength + 8;\n        var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n        var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n        var lWordArray=Array(lNumberOfWords-1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while ( lByteCount < lMessageLength ) {\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n        lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n        lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n        return lWordArray;\n    };\n\n    function WordToHex(lValue) {\n        var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n        for (lCount = 0;lCount<=3;lCount++) {\n            lByte = (lValue>>>(lCount*8)) & 255;\n            WordToHexValue_temp = \"0\" + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n        }\n        return WordToHexValue;\n    };\n\n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    };\n\n    var x=Array();\n    var k,AA,BB,CC,DD,a,b,c,d;\n    var S11=7, S12=12, S13=17, S14=22;\n    var S21=5, S22=9 , S23=14, S24=20;\n    var S31=4, S32=11, S33=16, S34=23;\n    var S41=6, S42=10, S43=15, S44=21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n    for (k=0;k<x.length;k+=16) {\n        AA=a; BB=b; CC=c; DD=d;\n        a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n        d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n        c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n        b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n        a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n        d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n        c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n        b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n        a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n        d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n        c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n        b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n        a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n        d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n        c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n        b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n        a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n        d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n        c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n        b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n        a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n        d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n        c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n        b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n        a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n        d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n        c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n        b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n        a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n        d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n        c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n        b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n        a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n        d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n        c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n        b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n        a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n        d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n        c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n        b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n        a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n        d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n        c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n        b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n        a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n        d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n        c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n        b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n        a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n        d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n        c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n        b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n        a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n        d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n        c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n        b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n        a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n        d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n        c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n        b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n        a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n        d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n        c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n        b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n        a=AddUnsigned(a,AA);\n        b=AddUnsigned(b,BB);\n        c=AddUnsigned(c,CC);\n        d=AddUnsigned(d,DD);\n    }\n\n    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n    return temp.toLowerCase();\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Form, Input, Image, Loader, Segment, Dimmer, Label} from 'semantic-ui-react';\nimport {ListRoomRows} from '../components/ListRoomRows';\n// import {SearchingTab} from '../components/SearchingTab';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport {encrypt} from '../components/sha256';\n\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadedRooms: false,\n            isLoadedParam: false,\n            roomDetailOpen: false,\n            rooms: [],\n            roomIds: [],\n            status: [],\n            statusIds: [],\n            roomTypeOther: [],\n            roomTypeOtherIds: [],\n            listoption: [],\n            listoptionIds: [],\n            roomidselected: '',\n            statusSelected: ''\n        };\n\n        [\n            'getListRoomDetails',\n            'UpdateCheckInRoom',\n            'handleChangeRoomIDSelect',\n            'handleChangeStatusIDSelect',\n            'getListStatus',\n            'renderSearchForm',\n            'renderListRooms',\n            'getroomTypeOther',\n            'getlistoption',\n            'handleClearSearching',\n            'CheckoutRoom',\n            'getIPAddress',\n            'sha256'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async getListRoomDetails(filter) {\n        console.log(\"getListRoomDetails\");\n        this.setState({\n            isLoadedRooms: false,\n        });\n        await fetch(\"https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=listRoomsDetail\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    console.log(result);\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        console.log(tmp)\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomid'];\n                        tmp2['text'] = tmp['roomDescription'];\n                        tmp2['value'] = tmp['roomid'];\n                        ids.push(tmp2);\n                    }\n                    // debugger;\n                    if (filter) {\n                        let newstr = strs.filter(function (item) {\n                            return item[filter.id] == filter.value;\n                        });\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: newstr,\n                            roomIds: ids\n                        });\n                    } else {\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: strs,\n                            roomIds: ids\n                        });\n                    }\n                }, (error) => {\n                    this.setState({\n                        isLoadedRooms: false,\n                    });\n                }\n            )\n    }\n\n    getListStatus() {\n        fetch(\"https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=listStatus\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['statusId'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['statusId'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        status: strs,\n                        statusIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getlistoption() {\n        fetch(\"https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=listoption\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        ids.push(tmp['optionId']);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        listoption: strs,\n                        listoptionIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getroomTypeOther() {\n        fetch(\"https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=PricebyOther\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomType'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['roomType'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        roomTypeOther: strs,\n                        roomTypeOtherIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    async UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText) {\n        console.log(noteText);\n        let formatted_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n        } else {\n            let current_datetime = checkinTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&noteText=\" + noteText +\n            \"&totalOptionPrice=\" + totalOptionPrice;\n\n        await fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=checkin&id=' + id, {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            let isSuccess = false;\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : isSuccess = true;\n            });\n\n            let stt = response.status;\n            if (stt == 200) {\n                if (!msgerr) {\n                    toast.success(\"Đặt phòng \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(\"Error:\" + JSON.stringify(msgerr));\n                }\n            } else {\n                toast.error(\"Something is wrong, please check log for detail!\");\n            }\n\n        }).then(() => {\n            this.handleClearSearching();\n        })\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText) {\n        console.log(\"CheckoutRoom index page\");\n        console.log(id);\n        console.log(checkinTime);\n        console.log(roomClass);\n        console.log(options);\n        console.log(totalOptionPrice);\n        console.log(roomId);\n        console.log(action);\n        console.log(checkoutTime);\n        console.log(noteText);\n\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        // console.log(formatted_date);\n        // console.log(formattedcheckout_date);\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&roomId=\" + roomId +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&totalRoomPrice=\" + totalRoomPrice +\n            \"&totalPrice=\" + totalPrice +\n            \"&noteText=\" + noteText +\n            \"&checkoutTime=\" + formattedcheckout_date;\n\n        if (action == \"checkout\") {\n            await fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=checkout&id=' + id, {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n                let result = [];\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n                });\n\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        toast.success(\"Thanh toán \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.handleClearSearching();\n            })\n        }\n    }\n\n    handleClearSearching() {\n        this.setState({\n            roomidselected: '',\n            statusSelected: '',\n        });\n        this.getListRoomDetails();\n    }\n\n    handleChangeRoomIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomidselected: val['value'],\n            statusSelected: ''\n        }, () => {\n            let filter = {'id': 'roomid', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    handleChangeStatusIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            statusSelected: val['value'],\n            roomidselected: ''\n        }, () => {\n            let filter = {'id': 'status', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    renderSearchForm() {\n        if (this.state.isLoadedParam == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        let listRoomIds = this.state.roomIds;\n        let listStatusIds = this.state.statusIds;\n        let styleDisable = {'pointerEvents': ''};\n        // debugger;\n        if (!this.state.isLoadedRooms || !this.state.isLoadedParam) {\n            styleDisable = {'pointerEvents': 'none'};\n        }\n        var newlistRoomIds = '';\n        if (listRoomIds.length > 0) {\n            listRoomIds.map((item) => {\n                let tmp = {\n                    title: item.key,\n                    description: item.text\n                }\n                item['title'] = item.key;\n                item['description'] = item.text;\n            });\n        }\n        return (\n            <Segment padded style={styleDisable}>\n                {/*{listRoomIds.length > 0 && <SearchingTab listRoomId={listRoomIds}/>}*/}\n                {/*<Input fluid icon='search plus' action='Search' placeholder='Search...'/>*/}\n                <Label attached='top left' onClick={this.handleClearSearching}>Refresh</Label>\n                <br/>\n                <Form.Group widths='equal'>\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo Phòng'\n                        value={this.state.roomidselected}\n                        onChange={this.handleChangeRoomIDSelect}\n                        options={listRoomIds}\n                        placeholder='RoomIDs'\n                    />\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo trạng thái'\n                        value={this.state.statusSelected}\n                        options={listStatusIds}\n                        onChange={this.handleChangeStatusIDSelect}\n                        placeholder='Status'\n                    />\n                </Form.Group>\n            </Segment>\n        );\n    }\n\n    renderListRooms() {\n        const {rooms, statusIds, roomTypeOtherIds, listoptionIds, listoption} = {...this.state};\n\n        if (this.state.isLoadedRooms == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        return (\n            <Segment padded>\n                <Label attached='top'>Room List</Label>\n                <ListRoomRows roomsInfo={rooms}\n                              statusList={statusIds}\n                              roomTypeOther={roomTypeOtherIds}\n                              listoptionIds={listoptionIds}\n                              listoption={listoption}\n                              UpdateCheckInRoom={this.UpdateCheckInRoom}\n                              CheckoutRoom={this.CheckoutRoom}\n                />\n            </Segment>\n        );\n    }\n\n    async sha256(message) {\n        console.log(encrypt(\"bangth\"));\n    }\n\n\n    getIPAddress() {\n        // var https = require('https');\n        // var callback = function(err, ip){\n        //     if(err){\n        //         return console.log(err);\n        //     }\n        //     console.log('Our public IP is', ip);\n        //     // do something here with the IP address\n        // };\n        // https.get({\n        //     host: 'api.ipify.org',\n        // }, function(response) {\n        //     var ip = '';\n        //     response.on('data', function(d) {\n        //         ip += d;\n        //     });\n        //     response.on('end', function() {\n        //         if(ip){\n        //             callback(null, ip);\n        //         } else {\n        //             callback('could not get public ip address :(');\n        //         }\n        //     });\n        // });\n        // sessionStorage.setItem('key', 'value');\n\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            mode: 'cors',\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS');\",\n                \"Access-Control-Allow-Headers\": \"Content-Type\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        ipadd: result[\"ip\"],\n                    })\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    componentDidMount() {\n        console.log(this.props.userInfo);\n        this.getIPAddress();\n        this.getListRoomDetails();\n        this.getListStatus();\n        this.getroomTypeOther();\n        this.getlistoption();\n    }\n\n    render() {\n        // console.log(this.state.statusIds);\n        // console.log(this.state.statusSelected);\n        return (\n            <div>\n                {/*<ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>*/}\n                <Form>\n                    {this.renderSearchForm()}\n                    {this.renderListRooms()}\n                </Form>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nIndexPage.propTypes = {\n    userInfo: PropTypes.object\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ListRoomRows} from \"../components/ListRoomRows\";\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Input,\n    Label,\n    Modal,\n    Segment,\n    Statistic,\n    TextArea,\n    Confirm, Loader, Dimmer\n} from 'semantic-ui-react';\nimport {encrypt} from '../components/sha256';\nimport {toast} from 'react-toastify';\n\nexport class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errUserMsg: {\n                content: \"\",\n            },\n            errPassMsg: {\n                content: \"\",\n            },\n            errpinCode: {\n                content: \"\",\n            },\n            userInfo: {\n                token: '',\n                email: '',\n                ipAddress: ''\n            },\n            userName: '',\n            passWord: '',\n            pinCode: '',\n            isVerified: false,\n            isChecking: false\n        };\n        [\n            'submitLogin',\n            'handleChangeUser',\n            'handleChangePass',\n            'verifyEmail',\n            'handleChangePinCode'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    handleChangePinCode(event, data) {\n        this.setState({\n            pinCode: data.value\n        });\n    }\n\n    handleChangeUser(event, data) {\n        this.setState({\n            userName: data.value\n        });\n    }\n\n    handleChangePass(event, data) {\n        this.setState({\n            passWord: data.value\n        });\n    }\n\n    componentDidMount() {\n        console.log(this.props.ipAddress);\n    }\n\n    verifyEmail() {\n        this.setState({\n            isChecking: true\n        });\n        let username = this.state.userName;\n\n        let encoded = \"email=\" + username +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n        console.log(encoded);\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=verifyemail', {\n            method: 'POST',\n            body: encoded,\n            headers: {\"Content-type\": \"application/x-www-form-urlencoded\"}\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    toast.success(\"Please check your email to get PIN code!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.setState({\n                    isVerified: true\n                });\n            }\n        })\n    }\n\n    submitLogin() {\n        this.setState({\n            isChecking: true\n        });\n        console.log(this.state.passWord)\n        let passWordHash = encrypt(this.state.passWord);\n        let username = this.state.userName;\n        let pincode = this.state.pinCode;\n\n        let encoded = \"email=\" + username +\n            \"&pass=\" + passWordHash +\n            \"&pincode=\" + pincode +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n        console.log(encoded);\n        let isValid = false;\n        let token = \"\";\n        fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=login', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            // debugger;\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    token = data['token'];\n                    sessionStorage.setItem('tokenTBh', data['token']);\n                    sessionStorage.setItem('emailTBh', username);\n                    toast.success(\"Login Successfully!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.props.setTokenValid(username, token);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Segment>\n                <Form>\n                    <Form.Input\n                        error={this.state.errUserMsg.content != \"\" ? this.state.errUserMsg : null}\n                        fluid\n                        onChange={this.handleChangeUser}\n                        value={this.state.userName}\n                        label='User_Name:'\n                        name=\"username\"\n                        placeholder='Your Email'\n                    />\n                    {this.state.isVerified && <Form.Input\n                        style={{display: this.state.isVerified ? '' : 'none'}}\n                        error={this.state.errPassMsg.length > 0 ? this.state.errPassMsg : null}\n                        fluid\n                        onChange={this.handleChangePass}\n                        value={this.state.passWord}\n                        type=\"password\"\n                        label='Password:'\n                        placeholder='Put Your Password here...'\n                    />}\n\n                    {this.state.isVerified && <Form.Input\n                        error={this.state.errpinCode.length > 0 ? this.state.errpinCode : null}\n                        fluid\n                        onChange={this.handleChangePinCode}\n                        value={this.state.pinCode}\n                        type=\"number\"\n                        label='Pin Code:'\n                        placeholder='Put your Pin code here...'\n                    />}\n                    {this.state.isVerified ?\n                        <Button fluid size=\"large\" onClick={this.submitLogin} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Submit\n                        </Button>\n                        :\n                        <Button fluid size=\"large\" onClick={this.verifyEmail} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Verify\n                        </Button>\n                    }\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nLoginPage.propTypes = {\n    ipAddress: PropTypes.string,\n    setTokenValid: PropTypes.func\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {IndexPage} from './containers/IndexPage';\nimport {LoginPage} from './containers/LoginPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    Dimmer, Image,\n    Loader, Segment\n} from 'semantic-ui-react';\nimport {ToastContainer} from \"react-toastify\";\n\nclass ThaiBinhHotel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTokenValid: false,\n            userInfo: {\n                token: sessionStorage.getItem('tokenTBh'),\n                email: sessionStorage.getItem('emailTBh'),\n                ipAddress: \"\"\n            },\n            isChecking: true,\n        };\n        [\n            'checkTokenValid',\n            'getIPAndCheckToken',\n            'setTokenValid'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    setTokenValid(username, token) {\n        // debugger;\n        let userInfo = {...this.state.userInfo};\n        userInfo.email = username;\n        userInfo.token = token\n        this.setState({\n            isTokenValid: true,\n            userInfo: userInfo\n        });\n    }\n\n    getIPAndCheckToken() {\n        this.setState({\n            isChecking: true,\n        });\n\n        if (window.location.host == \"localhost:3000\") {\n            let result = JSON.parse(\"{\\\"ip\\\":\\\"1.54.77.215\\\"}\");\n            console.log(result[\"ip\"]);\n\n            let userInfo = {...this.state.userInfo};\n            userInfo['ipAddress'] = result[\"ip\"]\n            this.setState({\n                userInfo: userInfo\n            });\n\n            if (!this.state.userInfo.token) {\n                this.setState({\n                    isChecking: false\n                });\n                return;\n            }\n\n            this.checkTokenValid(result[\"ip\"])\n        } else {\n            // if(window.location.href == \"http://localhost:3000/\")\n            fetch(\"https://api.ipify.org/?format=json\", {\n                method: \"GET\",\n                mode: 'cors',\n                // body: JSON.stringify(data),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS');\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type\"\n                },\n            }).then(res => res.json())\n                .then(\n                    (result) => {\n                        console.log(result[\"ip\"]);\n\n                        let userInfo = {...this.state.userInfo};\n                        userInfo['ipAddress'] = result[\"ip\"]\n                        this.setState({\n                            userInfo: userInfo\n                        });\n\n                        if (!this.state.userInfo.token) {\n                            this.setState({\n                                isChecking: false\n                            });\n                            return;\n                        }\n\n                        this.checkTokenValid(result[\"ip\"])\n                    }, (error) => {\n                        console.log(error);\n                    }\n                )\n        }\n    }\n\n    async checkTokenValid(ipAddress) {\n        // let token = sessionStorage.getItem('tokenTBh');\n        // let email = sessionStorage.getItem('emailTBh');\n        // let ipAddress = this.getIPAddress();\n        let encoded = \"token=\" + this.state.userInfo.token +\n            \"&email=\" + this.state.userInfo.email +\n            \"&ipAddress=\" + ipAddress;\n\n        console.log(encoded);\n\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycbyYHV6fvlROAM9_EeLkFT12n4SCXxWMLmeOuiVEwwOu65a9TMDGLl5hp6AeasnsYsbG/exec?func=checkToken', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n            });\n        }).then(() => {\n            if (isValid) {\n                this.setState({\n                    isTokenValid: true,\n                    isChecking: false\n                });\n            } else {\n                this.setState({\n                    isTokenValid: false,\n                    isChecking: false\n                });\n            }\n        })\n    }\n\n    componentDidMount() {\n        // sessionStorage.setItem('tokenTBh', 'fb28ea0172706c801ce7d4e1d4edcb5f');\n        // sessionStorage.setItem('emailTBh', 'bang.th@mobivi.vn');\n        if (!this.state.userInfo.token) {\n            this.setState({\n                isTokenValid: false,\n                isChecking: false\n            });\n        }\n        this.getIPAndCheckToken();\n        // this.checkTokenValid(\"1.54.77.215\");\n    }\n\n    render() {\n        let isTokenValid = this.state.isTokenValid;\n        if (this.state.isChecking) {\n            // return <Loader size=\"massive\" active inline='centered'>System is checking your permission...</Loader>\n            return <Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>System is checking your permission...</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>\n        }\n        return (\n            <div>\n                <ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>\n                {isTokenValid ?\n                    <IndexPage userInfo={this.state.userInfo}/>\n                    :\n                    <LoginPage ipAddress={this.state.userInfo.ipAddress} setTokenValid={this.setTokenValid}/>}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<ThaiBinhHotel/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}