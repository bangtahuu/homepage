{"version":3,"sources":["containers/ListRoomPage.js","serviceWorker.js","index.js"],"names":["ListRoomPage","props","state","isLoaded","room","Name","Company","Phone","Product","Company_Address","RangeIncome","isICMCenter","rooms","getListRoom","bind","setListRoom","fetch","then","res","json","result","setState","console","log","error","method","body","headers","response","Form","Row","Col","Group","controlId","Label","Control","type","placeholder","Button","variant","className","src","alt","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ThaiBinhHotel","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.759638ab.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {forEach} from \"react-bootstrap/esm/utils/ElementChildren\";\nimport {Card,Button, Form, Row, Col, FormControl, FormCheck} from 'react-bootstrap';\n\n\nexport class ListRoomPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            room: {\n                Name: '',\n                Company: '',\n                Phone: '',\n                Product: '',\n                Company_Address: '',\n                RangeIncome: '',\n                isICMCenter: '',\n            },\n            rooms: [],\n        };\n\n        this.getListRoom = this.getListRoom.bind(this);\n        this.setListRoom = this.setListRoom.bind(this);\n    }\n\n    getListRoom() {\n        // fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listoption\")\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listRooms\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        // rooms: result,\n                        rooms: result\n                    });\n\n                    console.log(result[0]);\n\n                }, (error) => {\n                    this.setState({\n                        isLoaded: true,\n                    });\n                }\n            )\n    }\n\n    setListRoom() {\n        let Name = \"1\";\n        let Phone = \"2\";\n        let Company = \"3\";\n        let Company_Address = \"4\";\n        let isICMCenter = \"5\";\n        let RangeIncome = \"6\";\n        let Product = \"7\";\n        let encoded = \"Name=\" + Name + \"&Phone=\" + Phone + \"&Company=\" + Company + \"&Company_Address=\" + Company_Address + \"&isICMCenter=\" + isICMCenter + \"&RangeIncome=\" + RangeIncome + \"&Product=\" + Product;\n\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec', {\n            method: 'POST',\n            body: encoded,\n            // body: JSON.stringify({\n            //     title: 'New title added',\n            //     body: 'New body added. Hello body.'\n            // }),\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(response => {\n            console.log(response.json());\n        }).then(json => {\n            console.log(json);\n            // this.setState({\n            //     user:json\n            // });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Form>\n                    <Row>\n                        <Col>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>Email address</Form.Label>\n\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n                        </Col>\n                        <Col>\n                            <Form.Control type=\"password\" placeholder=\"Password\"/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Col>\n                        <Col/>\n                    </Row>\n                </Form>\n                <div className=\"row\">\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                    <div className=\"col-3 col-12-mobile\">\n                        <article className=\"item\">\n                            <div className=\"image fitfull\">\n                                <a className=\"image fit\"><img src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>\n                            </div>\n                            <header>\n                                <h3>Room 101</h3>\n                            </header>\n                        </article>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {ListRoomPage} from './containers/ListRoomPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nclass ThaiBinhHotel extends React.Component{\n    render(){\n        return <ListRoomPage/>;\n    }\n}\n\nReactDOM.render(<ThaiBinhHotel />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}